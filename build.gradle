// Gradle build script for SemVer plugin project.

// Plugins
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'distribution'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

// Artifact meta-data
archivesBaseName = 'semver-plugin'
group = 'com.github.tagc'
version = '0.1.0'
description = 'Semantic versioning plugin for managing project version numbers that are maintained as Git repositories'

// Project dependencies
repositories {
    jcenter()
}

dependencies {
    // We use the latest groovy 2.x version for building this library
    compile 'org.codehaus.groovy:groovy-all:2.3.6'

    // Gradle API
    compile gradleApi()

    // Git gradle plugin
    compile 'org.ajoberstar:gradle-git:0.12.0'
    
    // jcip annotations
    compile 'net.jcip:jcip-annotations:1.0'

    // We use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'junit:junit:4.11'
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        // Git gradle plugin
        classpath 'org.ajoberstar:gradle-git:0.12.0'

        // Bintray plugin 
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}

// Additional artifact declarations
task sourcesJar(type: Jar) {
    baseName archivesBaseName
    classifier 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    baseName archivesBaseName
    classifier 'groovydoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives groovydocJar
}

// Artifact distribution declarations
distributions {
    main {
        baseName archivesBaseName

        contents {
            from { libsDir }
        }
    }

    docs {
        baseName = "$archivesBaseName-docs"

        contents {
            from(libsDir) {
                include sourcesJar.archiveName
                include groovydocJar.archiveName
            }
        }
    }
}

ext {
    artifactoryBaseUrl = 'http://localhost:8081/artifactory'
    artifactorySnapshotRepoUrl = "$artifactoryBaseUrl/libs-snapshot-local"
    artifactoryReleaseRepoUrl = "$artifactoryBaseUrl/libs-release-local"
}

// Maven publications
publishing {
    publications {
        plugin(MavenPublication) {
            from components.java
            artifactId archivesBaseName
            
            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'Gradle SemVer plugin')
                root.appendNode('description', description)
                root.appendNode('inceptionYear', '2014')
                
                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'MIT License')
                license.appendNode('url', 'http://www.opensource.org/licenses/mit-license.php')
                license.appendNode('distribution', 'repo')

                def developer = root.appendNode('developers').appendNode('developer')
                developer.appendNode('id', 'tagc')
                developer.appendNode('name', 'David Fallah')
                developer.appendNode('email', 'davidfallah1@gmail.com')
            }

            artifact sourcesJar
            artifact groovydocJar
        }
    }

    repositories {
        maven {
            name 'myLocal'
            url "file://$projectDir/../repo"
        }

        maven {
            name 'remoteArtifactory'
            url project.version.endsWith('-SNAPSHOT') ? artifactorySnapshotRepoUrl : artifactoryReleaseRepoUrl

            credentials {
                username = artifactoryUsername
                password = artifactoryPassword
            }
        }
    }
}

// Bintray configuration

// Do not permit snapshot versions to be uploaded to Bintray.
project.tasks.bintrayUpload.onlyIf { !project.version.endsWith('-SNAPSHOT') }

bintray {
    user = bintrayUsername
    key = bintrayApiKey

    publications = ['plugin']
    publish = true
    
    pkg {
        repo = 'gradle-plugins'
        name = 'gradle-semver-plugin'
        desc = description
        websiteUrl = 'https://github.com/TAGC/Semver'
        issueTrackerUrl = 'https://github.com/TAGC/Semver/issues'
        vcsUrl = 'https://github.com/TAGC/Semver.git'
        licenses = ['MIT']
        labels = ['gradle', 'semantic-versioning']
        publicDownloadNumbers = true

        version {
            name = project.version
        }
    }
}
