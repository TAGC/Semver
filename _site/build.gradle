import org.ajoberstar.grgit.Grgit

// Buildscript dependencies
buildscript {
    repositories { jcenter() }
    dependencies {
        // Git gradle
        classpath 'org.ajoberstar:gradle-git:0.12.0'
    }
}

// Copy tasks
task copyDoc(type: Copy, description: "Copies documentation from build directory to project root directory.", group: 'build') {
    from "$buildDir/docs"
    into "$projectDir/docs"
}

task deleteDoc(type: Delete, description: "Deletes documentation folder.", group: 'clean') {
    delete "$projectDir/docs"
}

task copyHealth(description: "Copies project health data to project root directory.", group: 'build') << {
    def dirMap = ["reports/codenarc":"codenarc", "reports/jacoco/test/html":"jacoco"]
    dirMap.each { source, dest ->
        copy {
            from "$buildDir/$source"
            into "$projectDir/health/$dest"
            exclude '*.xml'
        }
    }
    
    // Copy projectHealth HTML file
    copy {
        from "$buildDir/generic/projectHealth.html"
        into "$projectDir/health/html"
    }
}

task deleteHealth(type: Delete, description: "Deletes project health folder.", group: 'clean') {
    delete "$projectDir/health"
}

// Clean task
task clean(group: 'clean')

clean.finalizedBy([deleteDoc, deleteHealth])

// Build task
task build(group: 'build')

build.dependsOn([copyDoc, copyHealth])

// Publish task
task publishToGithubPages(description: 'Commits and pushes to Github Pages remote branch.') {
    dependsOn build

    doLast {
        def repo = Grgit.open(project.file("$projectDir"))
        repo.add(patterns:['.'], update:true)
        repo.commit(message:'Github Pages update')
        repo.push()
    }
}

